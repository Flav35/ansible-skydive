ws_pong_timeout: {{ sd_ws_pong_timeout }}
cache:
  expire: {{ sd_cache_expire }}
  cleanup: {{ sd_cache_cleanup }}

{% if os_bind == "yes" %}
openstack:
  auth_url: {{ os_auth_url }}
  username: {{ os_username }}
  password: {{ os_password }}
  tenant_name: {{ os_tenant_name }}
  region_name: {{ os_region_name }}
{% endif %}

{% if sd_service_type == "analyzer" %}
analyzer:
  listen: {{ sd_port }}
  flowtable_expire: {{ sd_flowtable_expire }}
  flowtable_update: {{ sd_flowtable_update }}
  flowtable_agent_ratio: {{ sd_flowtable_agent_ratio }}
{% endif %}

{% if sd_service_type == "agent" %}
agent:
  listen: {{ sd_port }}
  analyzers: {{ sd_analyzers }}
  analyzer_username: {{ sd_username }}
  analyzer_password: {{ sd_password }}
  topology:
    probes:
    {% for item in sd_topology_probes %}
      - {{ item }}
    {% endfor %}
  {% if sd_flow_probes %}
  flow:
    probes:
    {% for item in sd_flow_probes %}
      - {{ item }}
    {% endfor %}
  {% endif %}
    
  metadata:
    info: {{ sd_node_information }}
{% endif %}

sflow:
  # Default listening address is 127.0.0.1
  # bind_address: 127.0.0.1

  # Port min/max used when starting a sflow probe, a agent will be started
  # with a port from this range
  # port_min: 6345
  # port_max: 6355

ovs:
  # ovsdb connection, Format supported :
  # * addr:port
  # * tcp://addr:port
  # * unix:///var/run/openvswitch/db.sock
  # If you use the tcp connection you need to authorize connexion to ovsdb agent
  # at least locally
  # % sudo ovs-appctl -t ovsdb-server ovsdb-server/add-remote ptcp:6400:127.0.0.1
  # ovsdb: unix:///var/run/openvswitch/db.sock

docker:
  # url: unix:///var/run/docker.sock

netns:
  # allow to specify where the netns probe is watching network namespace
  # run_path: /var/run/netns

storage:
  elasticsearch: {{ sd_es_host }}

graph:
  # graph backend memory, titangraph, gremlin(generic gremlin based), orientdb
  backend: memory
  # gremlin endpoint, ex ws://127.0.0.1:8182, http://127.0.0.1:8182/graph
  gremlin: ws://127.0.0.1:8182

logging:
  default: INFO
  topology/probes: INFO
  topology/graph: WARNING

auth:
  # specify the type of authentication mechanism: noauth, basic, keystone (default: noauth)
  # type: basic
    # basic:
      # file: /etc/skydive/htpasswd

etcd:
  # when 'embedded' is set to true, the analyzer will start an embedded etcd server
  # embedded: true

  # both the analyzers and the agents make use of etcd
  # servers:
  #   - http://127.0.0.1:2379

# OrientDB connection informations
# orientdb:
#  addr: http://127.0.0.1:2480
#  database: Skydive
#  username: root
# password: hello
